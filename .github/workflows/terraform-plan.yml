name: "Terraform Plan"

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled]
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  plan:
    name: "Terraform Plan"
    if: contains(github.event.pull_request.labels.*.name, 'plan')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-terraform-test
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        timeout-minutes: 5
        run: |
          terraform plan -no-color | tee tfplan.txt
        continue-on-error: true

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan.txt
          retention-days: 5

      - name: Check Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1 