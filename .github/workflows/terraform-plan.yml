name: "Terraform Plan"

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [ main ]
  issue_comment:
    types: [created]

permissions:
  id-token: write
  contents: read
  pull-requests: write
  checks: write
  issues: write
  statuses: write
  actions: read

jobs:
  plan:
    name: "Terraform Plan"
    # Run on either PR events or PR comments with the trigger phrase
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request &&
       contains(github.event.comment.body, '/terraform plan'))
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR
        if: github.event_name == 'issue_comment'
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head

      - name: Checkout
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v4

      - name: Extract Scenario
        id: scenario
        if: github.event_name == 'issue_comment'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = context.payload.comment.body;
            const match = comment.match(/\/terraform plan(?:\s+scenario=(\w+))?/);
            if (match) {
              const scenario = match[1] || 'delete_all'; // default to delete_all if no scenario specified
              if (!['delete_all', 'gcp_validator', 'gcp_minions'].includes(scenario)) {
                throw new Error(`Invalid scenario: ${scenario}. Valid scenarios are: delete_all, gcp_validator, gcp_minions`);
              }
              core.setOutput('scenario', scenario);
              core.setOutput('varfile', `scenarios/${scenario}.tfvars`);
            }

      # Set default scenario for PR events
      - name: Set Default Scenario
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            core.setOutput('scenario', 'delete_all');
            core.setOutput('varfile', 'scenarios/delete_all.tfvars');

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-terraform-test
          aws-region: us-east-1

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          create_credentials_file: true

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.1
          terraform_wrapper: false

      - name: Run Terraform Plan
        uses: OP5dev/tf-via-pr@v13
        env:
          TF_VAR_admin_ip: ${{ secrets.ADMIN_IP }}
          TF_VAR_aws_root_zone: ${{ secrets.AWS_ROOT_ZONE }}
          TF_VAR_aws_zone_id: ${{ secrets.AWS_ZONE_ID }}
          TF_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
          TF_VAR_github_username: ${{ github.repository_owner }}
          TF_VAR_github_repo: ${{ github.event.repository.name }}
        with:
          command: plan
          working-directory: .
          format: true
          validate: true
          comment-pr: always
          tag-actor: on-change
          arg-backend-config: >-
            bucket=terraform-state-solana-validator,key=terraform.tfstate,region=us-east-1,dynamodb_table=terraform-state-lock,encrypt=true
          arg-var-file: ${{ steps.scenario.outputs.varfile || '' }}

      - name: Remove Plan Label
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: 'plan',
                silent: true
              });
            } catch (error) {
              // Silently handle label removal errors
            } 