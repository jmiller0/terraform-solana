name: "Terraform Plan"

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled]
    branches: [ main ]

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  plan:
    name: "Terraform Plan"
    if: contains(github.event.pull_request.labels.*.name, 'plan')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-terraform-test
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Run Terraform Plan
        uses: OP5dev/tf-via-pr@v13
        env:
          TF_VAR_admin_ip: ${{ secrets.ADMIN_IP }}
          TF_VAR_aws_root_zone: ${{ secrets.AWS_ROOT_ZONE }}
          TF_VAR_aws_zone_id: ${{ secrets.AWS_ZONE_ID }}
          TF_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
          TF_VAR_github_username: ${{ github.repository_owner }}
          TF_VAR_github_repo: ${{ github.event.repository.name }}
        with:
          command: plan
          working-directory: .
          format: true
          validate: true
          comment-pr: always
          tag-actor: on-change

      - name: Remove Plan Label
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: 'plan'
              });
            } catch (error) {
              console.log('Label was already removed or did not exist');
            } 