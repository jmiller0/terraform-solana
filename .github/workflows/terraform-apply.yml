name: "Terraform Apply"

on:
  pull_request:
    types: [labeled]
    branches: [ main ]

permissions:
  id-token: write
  contents: read
  pull-requests: write
  checks: write
  issues: write
  statuses: write
  actions: read

jobs:
  check-plan:
    name: "Check Plan Status"
    if: contains(github.event.pull_request.labels.*.name, 'apply')
    runs-on: ubuntu-latest
    outputs:
      plan_success: ${{ steps.verify-plan.outputs.success }}
    steps:
      - name: Check if plan was successful
        id: verify-plan
        uses: actions/github-script@v7
        with:
          script: |
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha,
              check_name: 'Terraform Plan'
            });
            
            const planCheck = checks.check_runs.find(check => check.name === 'Terraform Plan');
            if (!planCheck || planCheck.conclusion !== 'success') {
              core.setFailed('Terraform plan must complete successfully before applying');
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: 'apply'
              });
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: '‚ùå Cannot apply changes without a successful plan. The apply label has been removed. Please ensure plan succeeds first.'
              });
              return false;
            }
            return true;

  apply:
    name: "Terraform Apply"
    needs: check-plan
    if: needs.check-plan.outputs.plan_success == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-terraform-test
          aws-region: us-east-1

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        env:
          TF_VAR_admin_ip: ${{ secrets.ADMIN_IP }}
          TF_VAR_aws_root_zone: ${{ secrets.AWS_ROOT_ZONE }}
          TF_VAR_aws_zone_id: ${{ secrets.AWS_ZONE_ID }}
          TF_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
          TF_VAR_github_username: ${{ github.repository_owner }}
          TF_VAR_github_repo: ${{ github.event.repository.name }}
        run: terraform apply -auto-approve -input=false

      - name: Remove Apply Label
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: 'apply'
              });
            } catch (error) {
              console.log('Label was already removed or did not exist');
            } 